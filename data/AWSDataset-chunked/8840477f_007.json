{
  "chunk_id": "8840477f_007",
  "source_file": "aws_iam_policies.md",
  "title": "What is IAM?",
  "section": "Policies and permissions in AWS Identity and Access Management",
  "content": "# Policies and permissions in AWS Identity and Access Management\n\nManage access in AWS by creating policies and attaching them to IAM identities (users,\ngroups of users, or roles) or AWS resources. A policy is an object in AWS that, when\nassociated with an identity or resource, defines their permissions. AWS evaluates these\npolicies when an IAM principal (user or role) makes a request. Permissions in the policies\ndetermine whether the request is allowed or denied. Most policies are stored in AWS as JSON\ndocuments. AWS supports seven types of policies: identity-based policies, resource-based\npolicies, permissions boundaries, AWS Organizations service control policies (SCPs), AWS Organizations resource control\npolicies (RCPs), access control lists (ACLs), and session policies.\n\nIAM policies define permissions for an action regardless of the method that you use to\nperform the operation. For example, if a policy allows the GetUser action, then a user with that policy can\nget user information from the AWS Management Console, the AWS CLI, or the AWS API. When you create an IAM\nuser, you can choose to allow console or programmatic access. If console access is allowed, the\nIAM user can sign in to the console using their sign-in credentials. If programmatic access is\nallowed, the user can use access keys to work with the CLI or API.",
  "token_count": 277,
  "char_count": 1345,
  "chunk_index": 7,
  "total_chunks": 12,
  "overlap_with_previous": false,
  "metadata": {
    "service_name": "Aws Iam Policies.Md",
    "document_type": "guide",
    "header_level": 1,
    "file_size_chars": 11549,
    "processing_timestamp": "2025-08-02"
  }
}