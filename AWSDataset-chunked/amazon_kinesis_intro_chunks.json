{
  "source_file": "amazon_kinesis_intro.md",
  "total_chunks": 3,
  "chunks": [
    {
      "chunk_id": "0e610fa8_001",
      "source_file": "amazon_kinesis_intro.md",
      "title": "What is Amazon Kinesis Data Streams?",
      "section": "What is Amazon Kinesis Data Streams?",
      "content": "# What is Amazon Kinesis Data Streams?\n\nYou can use Amazon Kinesis Data Streams to collect and process large streams of data records in real time. You\ncan create data-processing applications, known as *Kinesis Data Streams applications*. A\ntypical Kinesis Data Streams application reads data from a *data stream* as data\nrecords. These applications can use the Kinesis Client Library, and they can run on Amazon EC2\ninstances. You can send the processed records to dashboards, use them to generate alerts,\ndynamically change pricing and advertising strategies, or send data to a variety of other\nAWS services.\n\nKinesis Data Streams is part of the Kinesis streaming data platform, along with Firehose, Kinesis Video Streams, and Managed Service for Apache Flink.",
      "token_count": 160,
      "char_count": 761,
      "chunk_index": 1,
      "total_chunks": 46,
      "overlap_with_previous": false,
      "metadata": {
        "service_name": "Amazon Kinesis",
        "document_type": "introduction",
        "header_level": 1,
        "file_size_chars": 9924,
        "processing_timestamp": "2025-08-02"
      }
    },
    {
      "chunk_id": "0e610fa8_002",
      "source_file": "amazon_kinesis_intro.md",
      "title": "What is Amazon Kinesis Data Streams?",
      "section": "What can I do with Kinesis Data Streams?",
      "content": "## What can I do with Kinesis Data Streams?\n\nYou can use Kinesis Data Streams for rapid and continuous data intake and aggregation. The type of\ndata used can include IT infrastructure log data, application logs, social media, market\ndata feeds, and web clickstream data. Because the response time for the data intake and\nprocessing is in real time, the processing is typically lightweight.\n\nThe following are typical scenarios for using Kinesis Data Streams:\n\n**Accelerated log and data feed intake and processing**\n:   You can have producers push data directly into a stream. For example, push\n    system and application logs and they are available for processing in\n    seconds. This prevents the log data from being lost if the front end or\n    application server fails. Kinesis Data Streams provides accelerated data feed intake\n    because you don't batch the data on the servers before you submit it for\n    intake.\n\n**Real-time metrics and reporting**\n:   You can use data collected into Kinesis Data Streams for simple data analysis and\n    reporting in real time. For example, your data-processing application can\n    work on metrics and reporting for system and application logs as the data is\n    streaming in, rather than wait to receive batches of data.\n\n**Real-time data analytics**\n:   This combines the power of parallel processing with the value of real-time\n    data. For example, process website clickstreams in real time, and then\n    analyze site usability engagement using multiple different Kinesis Data Streams\n    applications running in parallel.\n\n**Complex stream processing**\n:   You can create Directed Acyclic Graphs (DAGs) of Kinesis Data Streams applications and\n    data streams. This typically involves putting data from multiple Kinesis Data Streams\n    applications into another stream for downstream processing by a different\n    Kinesis Data Streams application.",
      "token_count": 375,
      "char_count": 1900,
      "chunk_index": 2,
      "total_chunks": 46,
      "overlap_with_previous": false,
      "metadata": {
        "service_name": "Amazon Kinesis",
        "document_type": "introduction",
        "header_level": 1,
        "file_size_chars": 9924,
        "processing_timestamp": "2025-08-02"
      }
    },
    {
      "chunk_id": "0e610fa8_003",
      "source_file": "amazon_kinesis_intro.md",
      "title": "What is Amazon Kinesis Data Streams?",
      "section": "Benefits of using Kinesis Data Streams",
      "content": "## Benefits of using Kinesis Data Streams\n\nAlthough you can use Kinesis Data Streams to solve a variety of streaming data problems, a common use\nis the real-time aggregation of data followed by loading the aggregate data into a data\nwarehouse or map-reduce cluster.\n\nData is put into Kinesis data streams, which ensures durability and elasticity. The delay\nbetween the time a record is put into the stream and the time it can be retrieved\n(put-to-get delay) is typically less than 1 second. In other words, a Kinesis Data Streams application\ncan start consuming the data from the stream almost immediately after the data is added.\nThe managed service aspect of Kinesis Data Streams relieves you of the operational burden of creating\nand running a data intake pipeline. You can create streaming map-reduceâ€“type\napplications. The elasticity of Kinesis Data Streams enables you to scale the stream up or down, so\nthat you never lose data records before they expire.\n\nMultiple Kinesis Data Streams applications can consume data from a stream, so that multiple actions,\nlike archiving and processing, can take place concurrently and independently. For\nexample, two applications can read data from the same stream. The first application\ncalculates running aggregates and updates an Amazon DynamoDB table, and the second application\ncompresses and archives data to a data store like Amazon Simple Storage Service (Amazon S3). The DynamoDB table with\nrunning aggregates is then read by a dashboard for up-to-the-minute reports.\n\nThe Kinesis Client Library enables fault-tolerant consumption of data from streams and\nprovides scaling support for Kinesis Data Streams applications.",
      "token_count": 332,
      "char_count": 1671,
      "chunk_index": 3,
      "total_chunks": 46,
      "overlap_with_previous": false,
      "metadata": {
        "service_name": "Amazon Kinesis",
        "document_type": "introduction",
        "header_level": 1,
        "file_size_chars": 9924,
        "processing_timestamp": "2025-08-02"
      }
    }
  ]
}